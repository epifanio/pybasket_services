version: '3.3'

services:
  fastapi:
    image: epinux/fastapi:latest
    build:
      context: ./docker/fastapi
    environment:
        DOWNLOAD_DIR: "/app/download"
        DEBUG: 1
        PYTHONUNBUFFERED: 1
        LOGLEVEL: DEBUG
        RABBIT_HOST: "pyamqp://guest@rabbit//"
        API_HOST: "metsis.epinux.com"
        UI_HOST: "bokeh.epinux.com"
        PLOT_ENDPOINT: "https://bokeh.epinux.com/TS-Plot"
        WMS_ENDPOINT: "https://bokeh.epinux.com/GISPY"
        FORWARDED_ALLOW_IPS: "*"
        REDIS_PASSWORD: "FGX0Im8cROKpFpHPOP8FETmOpLPsiLwEnHHXprOgn2AR7r7cGp"
    volumes:
      - ./apps/pybasket_api:/app
    ports:
      - 8000:80
    hostname: fastapi
    links:
      - bokeh
    networks:
      - net
      - traefik-public
    deploy:
      resources:
        #limits:
        #  cpus: '0.50'
        #  memory: 2048M
        reservations:
          cpus: '0.25'
          memory: 512M
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.metsis-http.rule=Host(`${DOMAIN?Variable not set}`)
        - traefik.http.routers.metsis-http.entrypoints=http
        - traefik.http.routers.metsis-http.middlewares=https-redirect
        - traefik.http.routers.metsis-https.rule=Host(`${DOMAIN?Variable not set}`)
        - traefik.http.routers.metsis-https.entrypoints=https
        - traefik.http.routers.metsis-https.tls=true
        - traefik.http.routers.metsis-https.tls.certresolver=le
        - traefik.http.services.metsis.loadbalancer.server.port=80
        # allow CORS
        - "traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT"
        - "traefik.http.middlewares.testheader.headers.accesscontrolalloworiginlist=*"
        - "traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100"
        - "traefik.http.middlewares.testheader.headers.addvaryheader=true"

  rabbit:
    image: rabbitmq:latest
    ports:
      - 5672:5672
    hostname: rabbit
    networks:
      - net 
  
  worker:
    image: epinux/fastapi:latest
    environment: 
      DOWNLOAD_DIR: "/app/download"
      PYTHONPATH: "/app"
      RABBIT_HOST: "pyamqp://guest@rabbit//"
      API_HOST: "metsis.epinux.com"
      UI_HOST: "bokeh.epinux.com"
      PLOT_ENDPOINT: "https://bokeh.epinux.com/TS-Plot"
      WMS_ENDPOINT: "https://bokeh.epinux.com/GISPY"
      REDIS_PASSWORD: "FGX0Im8cROKpFpHPOP8FETmOpLPsiLwEnHHXprOgn2AR7r7cGp"
    volumes:
      - ./apps/pybasket_api:/app
    entrypoint: celery --app=worker.celery_app worker -c 2 --loglevel=debug
    depends_on: 
      - rabbit
    hostname: worker
    networks:
      - net  

  flower:  
    image: mher/flower:0.9.5
    command: ["flower", "--broker=amqp://guest@rabbit//", "--port=8888"]  
    ports:  
      - 10000:8888 
    depends_on: 
      - rabbit
    hostname: flower
    networks:
      - net
      - traefik-public

  bokeh:
    image: epinux/bokeh:latest
    build:
      context: ./docker/bokeh
    environment:
      BOKEH_ALLOW_WS_ORIGIN: '*' # 'metsis.epinux.com,metsis-dev.local,bokeh.epinux.com,demosearch.metsis.met.no'
      ORIGIN: 'metsis.epinux.com'
      PORT: '7000'
      LOG_LEVEL: 'debug'
      BOKEH_LOG_LEVEL: 'debug'
      API_HOST: "metsis.epinux.com"
      UI_HOST: "bokeh.epinux.com"
      PLOT_ENDPOINT: "https://bokeh.epinux.com/TS-Plot"
      WMS_ENDPOINT: "https://bokeh.epinux.com/GISPY"
      REDIS_PASSWORD: "FGX0Im8cROKpFpHPOP8FETmOpLPsiLwEnHHXprOgn2AR7r7cGp"
      TSPLOT_DOWNLOAD: '/TS-Plot/static/Download'
      PYTHONUNBUFFERED: 1
    volumes:
      - ./apps/pybasket_ui/dashboard:/pybasket_ui
      - ./apps/pybasket_ui/SIE:/SIE
      - ./apps/pybasket_ui/CSW:/CSW
      - ./apps/pybasket_ui/ipywidgets:/ipywidgets
      #- ./apps/pybasket_ui/ZTWMS:/ZTWMS
      - ./apps/pybasket_ui/TS-Plot:/TS-Plot
      - ./apps/pybasket_ui/GISPY/gispy:/GISPY
      - ./apps/pybasket_ui/entrypoint.sh:/entrypoint.sh
    ports:
      - 7000:7000
    hostname: bokeh
    networks:
      - net
      - traefik-public
    deploy:
      restart_policy:
        condition: on-failure
      resources:
        #limits:
        #  cpus: '0.50'
        #  memory: 2048M
        reservations:
          cpus: '0.25'
          memory: 512M
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.bokeh-http.rule=Host(`${DOMAIN2?Variable not set}`)
        - traefik.http.routers.bokeh-http.entrypoints=http
        - traefik.http.routers.bokeh-http.middlewares=https-redirect
        - traefik.http.routers.bokeh-https.rule=Host(`${DOMAIN2?Variable not set}`)
        - traefik.http.routers.bokeh-https.entrypoints=https
        - traefik.http.routers.bokeh-https.tls=true
        - traefik.http.routers.bokeh-https.tls.certresolver=le
        - traefik.http.services.bokeh.loadbalancer.server.port=7000
        # allow CORS
        - "traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT"
        - "traefik.http.middlewares.testheader.headers.accesscontrolalloworiginlist=*"
        - "traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100"
        - "traefik.http.middlewares.testheader.headers.addvaryheader=true"

  redismod:
    image: redislabs/redismod:latest
    ports:
      - 6379:6379
    volumes:
      - ./apps/redis/data:/data
      - ./apps/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: '/usr/local/etc/redis/redis.conf --appendonly yes'
    hostname: redismod
    networks:
      - net 

networks:
  net:
    driver: overlay
    attachable: true
  traefik-public:
    external: true
